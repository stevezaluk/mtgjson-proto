syntax = "proto3";

package deck;

import "card/card_set.proto";
import "meta/mtgjson_api.proto";

option go_package = "github.com/stevezaluk/mtgjson-models/deck";

/*
Deck - Represents an MTGJSON deck

See here for more info: https://mtgjson.com/data-models/deck

This model has been changed slightly from the original model to seperate out lists for
both the card ids and for cards themselves. This way we can store just the ID's in the database
and fill the contents field before it gets returned to the user
*/
message Deck {
    string name = 1; // @gotags: bson:"name"
    string code = 2; // @gotags: bson:"code"
    string type = 3; // @gotags: bson:"type"
    string releaseDate = 4; // @gotags: bson:"releaseDate"
    DeckContentIds contents = 5; // @gotags: bson:"contents"
    meta.MTGJSONAPIMeta mtgjsonApiMeta = 6; // @gotags: bson:"mtgjsonApiMeta"
}

/*
DeckContentIds - Represents the contents of a deck that are stored within Mongo
 */
message DeckContentIds {
    map<string, int64> mainBoard = 5; // @gotags: bson:"mainBoard"
    map<string, int64> sideBoard = 6; // @gotags: bson:"sideBoard"
    map<string, int64> commander = 7; // @gotags: bson:"commander"
}

/*
DeckContents - Represents the contents of deck that are returned to the caller
 */
message DeckContents {
    map<string, DeckContentEntry> mainBoard = 1; // @gotags: bson:"mainBoard"
    map<string, DeckContentEntry> sideBoard = 2; // @gotags: bson:"sideBoard"
    map<string, DeckContentEntry> commander = 3; // @gotags: bson:"commander"

}

/*
DeckContentEntry - Represents a single entry in the DeckContents structure
 */
message DeckContentEntry {
    int64 quantity = 1; // @gotags: bson:"quantity"
    card.CardSet card = 2; // @gotags: bson:"card"
}